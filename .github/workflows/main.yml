name: Java Quality Analysis

on:
  push:
    branches: [main]

permissions:
  contents: read
  statuses: write

jobs:
  security-analysis:
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Run Tests
        run:
          mvn test
          ##working-directory: pic

      - name: Build Project
        run: mvn clean package -DskipTests=true

      - name: Use secret
        run: echo "Secret is ${{ secrets.SONAR_TOKEN }}"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      #- name: Build and analyze
      #  env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #  run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=QUIDA5V_qualityAnalysis

      # SonarQube Scan
      #- name: SonarQube Scan
      #  uses: SonarSource/sonarcloud-github-action@v2
      #  with:
      #    args: >
      #      -Dsonar.projectKey=qualityAnalysis
      #      -Dsonar.organization=quida5v
      #      -Dsonar.host.url=https://sonarcloud.io
      #      -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Optionally update GitHub Commit Status (if not handled by tools)
      - name: Update Build Status
        if: always()
        run: |
          echo "Build completed with status ${{ job.status }}"
          # You can use GitHub's REST API or Actions to update commit status

      - name: Set commit status to success
        if: success() # Only run this step if the job succeeds
        run: |
          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "state": "success",
            "context": "Security and Code Analysis",
            "description": "All checks passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
